// <auto-generated />
using System;
using Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Db.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240703132125_UpdateTest3")]
    partial class UpdateTest3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Db.Model_Tables.CustomStandEmployees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomStandInfoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("integer");

                    b.Property<int>("InfoCentreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomStandInfoId");

                    b.HasIndex("EmployeesId");

                    b.ToTable("CustomStandEmployees");
                });

            modelBuilder.Entity("Db.Model_Tables.CustomStandInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeesId");

                    b.ToTable("CustomStandInfo");
                });

            modelBuilder.Entity("Db.Model_Tables.CustomStandRights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomStandInfoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("integer");

                    b.Property<int>("InfoCenterId")
                        .HasColumnType("integer");

                    b.Property<string>("Rights")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomStandInfoId");

                    b.ToTable("CustomStandRights");
                });

            modelBuilder.Entity("Db.Model_Tables.Divisions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ChiefId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentDivCode")
                        .HasColumnType("integer");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChiefId");

                    b.HasIndex("ParentId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Db.Model_Tables.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFired")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Db.Model_Tables.SessionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeesId")
                        .HasColumnType("integer");

                    b.Property<string>("ErrorList")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeesId");

                    b.ToTable("SessionLog");
                });

            modelBuilder.Entity("Db.Model_Tables.Settings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("EmployeesId")
                        .HasColumnType("integer");

                    b.Property<string>("JsonSettings")
                        .IsRequired()
                        .HasColumnType("json");

                    b.HasKey("id");

                    b.HasIndex("EmployeesId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Db.Model_Tables.CustomStandEmployees", b =>
                {
                    b.HasOne("Db.Model_Tables.CustomStandInfo", "CustomStandInfo")
                        .WithMany("CustomStandEmployees")
                        .HasForeignKey("CustomStandInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Db.Model_Tables.Employees", "Employees")
                        .WithMany("CustomStandEmployees")
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomStandInfo");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Db.Model_Tables.CustomStandInfo", b =>
                {
                    b.HasOne("Db.Model_Tables.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Db.Model_Tables.CustomStandRights", b =>
                {
                    b.HasOne("Db.Model_Tables.CustomStandInfo", "CustomStandInfo")
                        .WithMany("CustomStandRights")
                        .HasForeignKey("CustomStandInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomStandInfo");
                });

            modelBuilder.Entity("Db.Model_Tables.Divisions", b =>
                {
                    b.HasOne("Db.Model_Tables.Employees", "Chef")
                        .WithMany("ChefDivisions")
                        .HasForeignKey("ChiefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Db.Model_Tables.Divisions", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chef");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Db.Model_Tables.Employees", b =>
                {
                    b.HasOne("Db.Model_Tables.Divisions", "Divisions")
                        .WithMany("Employees")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("Db.Model_Tables.SessionLog", b =>
                {
                    b.HasOne("Db.Model_Tables.Employees", "Employees")
                        .WithMany("Logs")
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Db.Model_Tables.Settings", b =>
                {
                    b.HasOne("Db.Model_Tables.Employees", "Employees")
                        .WithMany("Settings")
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Db.Model_Tables.CustomStandInfo", b =>
                {
                    b.Navigation("CustomStandEmployees");

                    b.Navigation("CustomStandRights");
                });

            modelBuilder.Entity("Db.Model_Tables.Divisions", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Db.Model_Tables.Employees", b =>
                {
                    b.Navigation("ChefDivisions");

                    b.Navigation("CustomStandEmployees");

                    b.Navigation("Logs");

                    b.Navigation("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
